// Code generated by moshi-kotlin-codegen. Do not edit.
package com.tawabsoft.taxi.common.networking.socket

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import com.squareup.moshi.internal.Util
import com.tawabsoft.taxi.common.models.PaymentGateway
import com.tawabsoft.taxi.common.models.WalletItem
import java.lang.NullPointerException
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import kotlin.collections.emptySet
import kotlin.text.buildString

@Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION")
class WalletInfoResultJsonAdapter(
  moshi: Moshi
) : JsonAdapter<WalletInfoResult>() {
  private val options: JsonReader.Options = JsonReader.Options.of("gateways", "wallet")

  private val listOfPaymentGatewayAdapter: JsonAdapter<List<PaymentGateway>> =
      moshi.adapter(Types.newParameterizedType(List::class.java, PaymentGateway::class.java),
      emptySet(), "gateways")

  private val listOfWalletItemAdapter: JsonAdapter<List<WalletItem>> =
      moshi.adapter(Types.newParameterizedType(List::class.java, WalletItem::class.java),
      emptySet(), "wallet")

  override fun toString(): String = buildString(38) {
      append("GeneratedJsonAdapter(").append("WalletInfoResult").append(')') }

  override fun fromJson(reader: JsonReader): WalletInfoResult {
    var gateways: List<PaymentGateway>? = null
    var wallet: List<WalletItem>? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> gateways = listOfPaymentGatewayAdapter.fromJson(reader) ?:
            throw Util.unexpectedNull("gateways", "gateways", reader)
        1 -> wallet = listOfWalletItemAdapter.fromJson(reader) ?:
            throw Util.unexpectedNull("wallet", "wallet", reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return WalletInfoResult(
        gateways = gateways ?: throw Util.missingProperty("gateways", "gateways", reader),
        wallet = wallet ?: throw Util.missingProperty("wallet", "wallet", reader)
    )
  }

  override fun toJson(writer: JsonWriter, value: WalletInfoResult?) {
    if (value == null) {
      throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("gateways")
    listOfPaymentGatewayAdapter.toJson(writer, value.gateways)
    writer.name("wallet")
    listOfWalletItemAdapter.toJson(writer, value.wallet)
    writer.endObject()
  }
}
