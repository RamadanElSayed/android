// Code generated by moshi-kotlin-codegen. Do not edit.
package com.tawabsoft.taxi.common.networking.socket

import com.google.android.gms.maps.model.LatLng
import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.internal.Util
import com.tawabsoft.taxi.common.models.Request
import java.lang.NullPointerException
import kotlin.String
import kotlin.Suppress
import kotlin.collections.emptySet
import kotlin.text.buildString

@Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION")
class CurrentRequestResultJsonAdapter(
  moshi: Moshi
) : JsonAdapter<CurrentRequestResult>() {
  private val options: JsonReader.Options = JsonReader.Options.of("request", "driverLocation")

  private val requestAdapter: JsonAdapter<Request> = moshi.adapter(Request::class.java, emptySet(),
      "request")

  private val nullableLatLngAdapter: JsonAdapter<LatLng?> = moshi.adapter(LatLng::class.java,
      emptySet(), "driverLocation")

  override fun toString(): String = buildString(42) {
      append("GeneratedJsonAdapter(").append("CurrentRequestResult").append(')') }

  override fun fromJson(reader: JsonReader): CurrentRequestResult {
    var request: Request? = null
    var driverLocation: LatLng? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> request = requestAdapter.fromJson(reader) ?: throw Util.unexpectedNull("request",
            "request", reader)
        1 -> driverLocation = nullableLatLngAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return CurrentRequestResult(
        request = request ?: throw Util.missingProperty("request", "request", reader),
        driverLocation = driverLocation
    )
  }

  override fun toJson(writer: JsonWriter, value: CurrentRequestResult?) {
    if (value == null) {
      throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("request")
    requestAdapter.toJson(writer, value.request)
    writer.name("driverLocation")
    nullableLatLngAdapter.toJson(writer, value.driverLocation)
    writer.endObject()
  }
}
