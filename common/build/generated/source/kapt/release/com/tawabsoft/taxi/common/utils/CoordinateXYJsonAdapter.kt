// Code generated by moshi-kotlin-codegen. Do not edit.
package com.tawabsoft.taxi.common.utils

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.internal.Util
import java.lang.NullPointerException
import kotlin.Double
import kotlin.String
import kotlin.Suppress
import kotlin.collections.emptySet
import kotlin.text.buildString

@Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION")
class CoordinateXYJsonAdapter(
  moshi: Moshi
) : JsonAdapter<CoordinateXY>() {
  private val options: JsonReader.Options = JsonReader.Options.of("x", "y")

  private val doubleAdapter: JsonAdapter<Double> = moshi.adapter(Double::class.java, emptySet(),
      "x")

  override fun toString(): String = buildString(34) {
      append("GeneratedJsonAdapter(").append("CoordinateXY").append(')') }

  override fun fromJson(reader: JsonReader): CoordinateXY {
    var x: Double? = null
    var y: Double? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> x = doubleAdapter.fromJson(reader) ?: throw Util.unexpectedNull("x", "x", reader)
        1 -> y = doubleAdapter.fromJson(reader) ?: throw Util.unexpectedNull("y", "y", reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return CoordinateXY(
        x = x ?: throw Util.missingProperty("x", "x", reader),
        y = y ?: throw Util.missingProperty("y", "y", reader)
    )
  }

  override fun toJson(writer: JsonWriter, value: CoordinateXY?) {
    if (value == null) {
      throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("x")
    doubleAdapter.toJson(writer, value.x)
    writer.name("y")
    doubleAdapter.toJson(writer, value.y)
    writer.endObject()
  }
}
